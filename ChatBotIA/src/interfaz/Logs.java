/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import entidades.Criterio;
import entidades.ReglaDato;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author fede_
 */
public class Logs extends javax.swing.JFrame {
    
    private static final double TAMAÑO_PIXELES_GUION = 4.1;

    private List<ReglaDato> reglasDatos;
    
    /**
     * Creates new form Logs
     */
    public Logs(List<ReglaDato> reglasDatos) {
        initComponents();
        this.reglasDatos = reglasDatos;
        this.escribirLogs();
    }
    
    private void escribirLogs(){
        String texto = "";
        String palabra;
        int cantidadGuiones = ((int)(taLogs.getSize().getWidth()/TAMAÑO_PIXELES_GUION));
        List<String> palabrasClaves;
        for(ReglaDato reglaDato : reglasDatos){
            texto += ((texto.equals("")) ? "" : "\n") + "Frase ingresada:\n\t" + reglaDato.getFrase();
            texto += ((texto.equals("")) ? "" : "\n") + "Palabras claves detectadas:\n\t";
            palabrasClaves = reglaDato.getPalabrasClaves();
            for(int i = 0; i<palabrasClaves.size(); i++){
                palabra = palabrasClaves.get(i);
                texto += palabra;
                if(i < palabrasClaves.size() - 1){
                    texto += " ,";
                }
            }
            texto += ((texto.equals("")) ? "" : "\n") + "Regla aplicada:" + reglaDato.getRegla().toString();
            texto += ((texto.equals("")) ? "" : "\n") + "Criterios aplicados:";
            for(Criterio criterio : reglaDato.getCriteriosAplicados()){
                texto += "\n\t" + criterio.toString();
            }
            texto += ((texto.equals("")) ? "" : "\n");
            for(int i=0; i<cantidadGuiones; i++){
                texto += "-";
            }
        }
        taLogs.setText(texto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taLogs = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Logs");

        taLogs.setEditable(false);
        taLogs.setColumns(20);
        taLogs.setRows(5);
        jScrollPane1.setViewportView(taLogs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taLogs;
    // End of variables declaration//GEN-END:variables
}
